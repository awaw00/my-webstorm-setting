<templateSet group="redux">
  <template name="at" value="export const $TYPE_NAME$ = '$TYPE_NAME$';" description="action types" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ats" value="export const $BASE_TYPE$_REQUEST = '$BASE_TYPE$_REQUEST';&#10;export const $BASE_TYPE$_SUCCESS = '$BASE_TYPE$_SUCCESS';&#10;export const $BASE_TYPE$_FAILURE = '$BASE_TYPE$_FAILURE';" description="action types for request" toReformat="false" toShortenFQNames="true">
    <variable name="BASE_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rd" value="export function $reducerName$ (state = $initialState$, {type, payload}) {&#10;  switch (type) {&#10;    $END$&#10;    default:&#10;      return state;&#10;  }&#10;}" description="reducer" toReformat="false" toShortenFQNames="true">
    <variable name="reducerName" expression="" defaultValue="&quot;reducerName&quot;" alwaysStopAt="true" />
    <variable name="initialState" expression="camelCase(String)" defaultValue="&quot;''&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rc" value="case $types$.$TYPE_NAME$: {&#10;  $END$&#10;}" description="reducer case" toReformat="false" toShortenFQNames="true">
    <variable name="types" expression="" defaultValue="&quot;types&quot;" alwaysStopAt="true" />
    <variable name="TYPE_NAME" expression="" defaultValue="&quot;TYPE_NAME&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>